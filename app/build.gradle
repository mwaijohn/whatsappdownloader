apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.shareapidevs.whatsappdownloader"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 8
        versionName "version 8.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        resConfigs "en", "es", "fr"
    }

    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            storeFile file("whatsappdownloader.jks")
            storePassword ""
            keyAlias "key0"
            keyPassword ""
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    bundle {
//        density {
//            // Different APKs are generated for devices with different screen densities; true by default.
//            enableSplit true
//        }
//        abi {
//            // Different APKs are generated for devices with different CPU architectures; true by default.
//            enableSplit true
//        }
//        language {
//            // This is disabled so that the App Bundle does NOT split the APK for each language.
//            // We're gonna use the same APK for all languages.
//            enableSplit false
//        }
//
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    implementation 'com.github.matecode:Snacky:1.1.4'
    implementation 'com.karumi:dexter:5.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //implementation 'com.github.clans:fab:+'

    //admob
    implementation 'com.google.android.gms:play-services-ads:18.1.1'

    //mediation
    implementation 'com.google.ads.mediation:facebook:5.5.0.0'

    //rate app dialogue
    implementation 'io.github.kobakei:ratethisapp:1.2.0'

    //firebase
    implementation 'com.google.firebase:firebase-core:17.0.1'

    // (Recommended) Add Analytics
    //implementation 'com.google.firebase:firebase-analytics:17.2.0'

    // Add dependency
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // This will get the latest available version of the MoPub SDK.
    // Alternatively, you may specify a specific version from the changelog to download.
    // For banners
//    implementation('com.mopub:mopub-sdk-banner:+@aar') {
//        transitive = true
//    }
//
//    // For interstitials
//    implementation('com.mopub:mopub-sdk-interstitial:+@aar') {
//        transitive = true
//    }
//
//    // For rewarded videos. This will automatically also include interstitials
//    implementation('com.mopub:mopub-sdk-rewardedvideo:+@aar') {
//        transitive = true
//    }
//
//    // For native static (images).
//    implementation('com.mopub:mopub-sdk-native-static:+@aar') {
//        transitive = true
//    }
//
//    // For native video. This will automatically also include native static
//    implementation('com.mopub:mopub-sdk-native-video:+@aar') {
//        transitive = true
//    }

    implementation 'com.google.android.play:core:1.6.4'
}
